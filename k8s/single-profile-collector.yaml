apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nrdot-collector-host
  namespace: observability
  labels:
    app: nrdot-collector-host
spec:
  selector:
    matchLabels:
      app: nrdot-collector-host
  template:
    metadata:
      labels:
        app: nrdot-collector-host
    spec:
      serviceAccountName: nrdot-collector
      containers:
      - name: collector
        image: newrelic/nrdot-collector-host:1.1.0
        securityContext:
          runAsUser: 0
        env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license
              key: NEW_RELIC_LICENSE_KEY
        - name: HOST_ROOT_PATH
          value: /hostfs
        - name: DEMO_ID
          value: "k8s-demo"
        - name: NEW_RELIC_METADATA_DEMO_ID
          value: "k8s-demo"
        - name: NEW_RELIC_DISPLAY_NAME 
          value: "k8s-collector-balanced"
        - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
          value: delta
        - name: OTEL_EXPORTER_OTLP_COMPRESSION
          value: zstd
        # Collection parameters - only one profile active at a time
        # These are set according to the selected profile
        - name: COLLECTION_INTERVAL
          value: "30s" # balanced profile (30s interval)
        - name: INCLUDE_THREADS
          value: "false" # balanced profile doesn't collect threads
        - name: INCLUDE_FDS
          value: "false" # balanced profile doesn't collect file descriptors
        - name: BENCHMARK_PROFILE
          value: "balanced"
        # Resource settings
        - name: MEM_LIMIT_MIB
          value: "256"
        volumeMounts:
        - name: hostfs
          mountPath: /hostfs
          readOnly: true
        - name: config
          mountPath: /etc/nrdot-collector-host/config.yaml
          subPath: config.yaml
          readOnly: true
        resources:
          limits:
            memory: 320Mi
          requests:
            cpu: 100m
            memory: 200Mi
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 20
      volumes:
      - name: hostfs
        hostPath:
          path: /
      - name: config
        configMap:
          name: single-profile-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nrdot-collector
  namespace: observability
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: single-profile-config
  namespace: observability
data:
  config.yaml: |
    extensions:
      health_check: {}

    receivers:
      hostmetrics:
        root_path: ${env:HOST_ROOT_PATH:-/hostfs}
        collection_interval: ${env:COLLECTION_INTERVAL:-30s}
        scrapers:
          process:
            metrics:
              process.cpu.utilization: {enabled: true}
              process.memory.usage: {enabled: true}
              process.threads: {enabled: ${env:INCLUDE_THREADS:-false}}
              process.open_fds: {enabled: ${env:INCLUDE_FDS:-false}}
          processes: {}

    processors:
      memory_limiter:
        limit_mib: ${env:MEM_LIMIT_MIB:-256}
        check_interval: 1s
      
      resourcedetection:
        detectors: ["system"]
        system: {hostname_sources: ["os"]}
      
      batch: {}
      
      attributes/tag_profile:
        actions:
          - {key: benchmark.profile, value: ${env:BENCHMARK_PROFILE:-balanced}, action: upsert}
          - {key: benchmark.demo_id, value: ${env:DEMO_ID:-k8s-demo}, action: upsert}

    exporters:
      otlphttp:
        endpoint: ${env:OTEL_EXPORTER_OTLP_ENDPOINT:-https://otlp.nr-data.net}
        headers:
          api-key: ${env:NEW_RELIC_LICENSE_KEY}
        compression: ${env:OTEL_EXPORTER_OTLP_COMPRESSION:-zstd}

    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [memory_limiter, resourcedetection, attributes/tag_profile, batch]
          exporters: [otlphttp]