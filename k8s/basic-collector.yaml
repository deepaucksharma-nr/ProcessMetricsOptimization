apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nrdot-collector-host
  namespace: observability
  labels:
    app: nrdot-collector-host
spec:
  selector:
    matchLabels:
      app: nrdot-collector-host
  template:
    metadata:
      labels:
        app: nrdot-collector-host
    spec:
      serviceAccountName: nrdot-collector
      containers:
      - name: collector
        image: newrelic/nrdot-collector-host:1.1.0
        securityContext:
          runAsUser: 0
        env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license
              key: NEW_RELIC_LICENSE_KEY
        - name: HOST_ROOT_PATH
          value: /hostfs
        - name: DEMO_ID
          value: k8s-demo
        - name: NEW_RELIC_METADATA_DEMO_ID
          value: k8s-demo
        - name: NEW_RELIC_DISPLAY_NAME
          value: k8s-demo
        - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
          value: delta
        - name: OTEL_EXPORTER_OTLP_COMPRESSION
          value: zstd
        volumeMounts:
        - name: hostfs
          mountPath: /hostfs
          readOnly: true
        - name: config
          mountPath: /etc/nrdot-collector-host/config.yaml
          subPath: config.yaml
          readOnly: true
        resources:
          limits:
            memory: 320Mi
          requests:
            cpu: 100m
            memory: 200Mi
      volumes:
      - name: hostfs
        hostPath:
          path: /
      - name: config
        configMap:
          name: basic-collector-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nrdot-collector
  namespace: observability
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: basic-collector-config
  namespace: observability
data:
  config.yaml: |
    extensions:
      health_check: {}

    receivers:
      hostmetrics:
        collection_interval: 30s
        scrapers:
          cpu: {}
          load: {}
          memory: {}
          disk: {}
          filesystem: {}
          network: {}

    processors:
      batch: {}
      
    exporters:
      otlphttp:
        endpoint: https://otlp.nr-data.net
        headers:
          api-key: ${env:NEW_RELIC_LICENSE_KEY}

    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [batch]
          exporters: [otlphttp]