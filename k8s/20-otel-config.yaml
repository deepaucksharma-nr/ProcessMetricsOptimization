apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-config
  namespace: {{ .NAMESPACE }}
data:
  config.yaml: |
    receivers:
      hostmetrics:
        collection_interval: {{ .OTEL_METRICS_COLLECTION_INTERVAL }}
        scrapers:
          cpu:
          memory:
          disk:
          filesystem:
          network:
          load:
        root_path: /rootfs

    processors:
      resourcedetection:
        detectors: [env, system]
        override: true
      resource:
        attributes:
          - key: host.name
            value: "${HOSTNAME}_{{ .OTEL_DISPLAY_NAME_SUFFIX }}"
            action: upsert
          - key: service.name
            value: "{{ .OTEL_SERVICE_NAME }}"
            action: upsert
          - key: monitoring.setup
            value: "nrdot_standard"
            action: upsert
          - key: vm.base.hostname
            value: "${HOSTNAME}"
            action: upsert
      batch:
        timeout: 10s
      transform/common_metrics:
        metric_statements:
          - context: metric
            statements:
              # CPU
              - set(name, "host.cpu.utilization") where name == "system.cpu.utilization"
              - set(name, "host.cpu.time") where name == "system.cpu.time"
              # Memory
              - set(name, "host.memory.usage") where name == "system.memory.usage"
              - set(name, "host.memory.utilization") where name == "system.memory.utilization"
              # Disk IO
              - set(name, "host.disk.io.bytes") where name == "system.disk.io"
              - set(name, "host.disk.ops") where name == "system.disk.operations"
              # Network IO
              - set(name, "host.network.io.bytes") where name == "system.network.io"
              # Filesystem
              - set(name, "host.filesystem.usage") where name == "system.filesystem.usage"
              - set(name, "host.filesystem.utilization") where name == "system.filesystem.utilization"
              # Load
              - set(name, "host.load.1m") where name == "system.load.average.1m"
              - set(name, "host.load.5m") where name == "system.load.average.5m"
              - set(name, "host.load.15m") where name == "system.load.average.15m"

    exporters:
      otlphttp/newrelic:
        endpoint: {{ .NR_ENDPOINT }}
        headers:
          api-key: ${NRIA_LICENSE_KEY}

    service:
      pipelines:
        metrics:
          receivers: [hostmetrics]
          processors: [resourcedetection, resource, transform/common_metrics, batch]
          exporters: [otlphttp/newrelic]