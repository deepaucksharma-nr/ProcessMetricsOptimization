name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          go mod tidy
          go mod verify

      - name: Build
        run: go build -v ./...

      - name: Unit Tests
        run: make unit-tests

      - name: Integration Tests (Short Mode)
        run: make integration-tests-short

      - name: Run benchmarks
        run: make bench

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m --verbose

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Check out code
        uses: actions/checkout@v4

      - name: Generate coverage report
        run: make coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          fail_ci_if_error: false