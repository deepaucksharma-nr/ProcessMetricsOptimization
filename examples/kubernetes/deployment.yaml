apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: monitoring
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    processors:
      batch:
        send_batch_size: 1000
        timeout: 10s
        
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 25

      reservoir_sampler:
        size_k: 5000
        window_duration: 60s
        checkpoint_path: /var/lib/otelcol/reservoir_checkpoint.db
        checkpoint_interval: 10s
        trace_aware: true
        trace_buffer_max_size: 100000
        trace_buffer_timeout: 10s
        db_compaction_schedule_cron: "0 0 * * *"  # Daily at midnight
        db_compaction_target_size: 104857600  # 100MB

    exporters:
      otlphttp:
        endpoint: "https://otlp.nr-data.net:4318"
        headers:
          api-key: ${NEW_RELIC_LICENSE_KEY}

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, reservoir_sampler]
          exporters: [otlphttp]

      telemetry:
        metrics:
          level: detailed
---
apiVersion: v1
kind: Secret
metadata:
  name: newrelic-secrets
  namespace: monitoring
type: Opaque
data:
  license-key: ${BASE64_ENCODED_LICENSE_KEY}  # Replace with actual base64-encoded license key
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: otel-collector-data
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: monitoring
  labels:
    app: otel-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        args:
        - "--config=/conf/config.yaml"
        ports:
        - containerPort: 4317  # OTLP gRPC
          name: otlp-grpc
        - containerPort: 4318  # OTLP HTTP
          name: otlp-http
        - containerPort: 8888  # Prometheus metrics
          name: metrics
        - containerPort: 13133  # Health check
          name: healthcheck
        env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-secrets
              key: license-key
        volumeMounts:
        - name: config
          mountPath: /conf
        - name: data
          mountPath: /var/lib/otelcol
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: otel-collector-config
      - name: data
        persistentVolumeClaim:
          claimName: otel-collector-data
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: monitoring
  labels:
    app: otel-collector
spec:
  type: ClusterIP
  ports:
  - port: 4317
    protocol: TCP
    targetPort: 4317
    name: otlp-grpc
  - port: 4318
    protocol: TCP
    targetPort: 4318
    name: otlp-http
  - port: 8888
    protocol: TCP
    targetPort: 8888
    name: metrics
  - port: 13133
    protocol: TCP
    targetPort: 13133
    name: healthcheck
  selector:
    app: otel-collector
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: otel-collector
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
  namespaceSelector:
    matchNames:
    - monitoring