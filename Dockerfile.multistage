# ─── Stage 1: build NR-DOT with your processor ──────────────────────────────────
FROM golang:1.21 AS builder

RUN apt-get update && apt-get install -y make git

# Clone NR-DOT repository
RUN git clone https://github.com/newrelic/opentelemetry-collector-releases.git /nrdot
WORKDIR /nrdot

# Clone our reservoir sampler repository directly
RUN git clone https://github.com/deepaucksharma/trace-aware-reservoir-otel.git /reservoir-sampler

# Find the manifest files
RUN find . -name "manifest.yaml" -type f

# Update module manifest and add replace directive
RUN if [ -f "distributions/nrdot-collector-k8s/manifest.yaml" ]; then \
    echo "  - gomod: github.com/deepaucksharma/trace-aware-reservoir-otel/internal/processor/reservoirsampler v0.0.0" >> distributions/nrdot-collector-k8s/manifest.yaml; \
    fi

# Create a local replace directive - important to use this approach
RUN echo "replace github.com/deepaucksharma/trace-aware-reservoir-otel => /reservoir-sampler" >> go.mod

# List our modules to debug
RUN go mod tidy && go list -m all | grep reservoir

# Download OCB tool for building
RUN go install go.opentelemetry.io/collector/cmd/builder@latest

# Build the distribution using locally available code
RUN mkdir -p /root/bin && \
    cp $(which builder) /root/bin/ocb && \
    chmod +x /root/bin/ocb

# Run the build script
RUN scripts/build.sh -d "nrdot-collector-k8s" -b /root/bin/ocb

# Check the build output
RUN find /nrdot -name "otelcol-*" -type f | xargs ls -la || echo "Build failed but continuing"

# ─── Stage 2: slim runtime image ────────────────────────────────────────────────
FROM alpine:3.19

RUN addgroup -g 10001 otel && adduser -D -G otel -u 10001 otel
COPY --from=builder /nrdot/_build/otelcol-nrdot /otelcol-nrdot
RUN mkdir -p /var/otelpersist/badger && chown -R otel:otel /var/otelpersist

USER otel
ENTRYPOINT ["/otelcol-nrdot"]
CMD ["--config=/etc/otelcol-nrdot/config.yaml"]

EXPOSE 4317 4318 8888