###############################################################################
# NRDOT 1.1.0-opt-plus (v2.3.1) – Process-only, Five Profiles                #
# Compatible with nrdot-collector-host 1.1.0 (OTel Collector v0.125.0)        #
# Health check port and batch processor now more configurable via env vars.  #
###############################################################################

extensions:
  health_check:
    endpoint: 0.0.0.0:${env:OTEL_COLLECTOR_HEALTH_CHECK_PORT:-13133} # Default 13133

_common_attr_actions: &common_attr_actions
  - {key: deployment.environment, value: "${env:OTEL_DEPLOYMENT_ENVIRONMENT:-production}", action: upsert}
  - {key: service.name,           value: "${env:OTEL_SERVICE_NAME_HOST_METRICS:-nrdot-collector-host}", action: upsert} # Default, can be overridden by env

###############################################################################
# 1 ▸ Receivers – ONLY process / processes scrapers                           #
###############################################################################
receivers:

  # ─── Ultra : tri-rate ──────────────────────────────────────────────────────
  hostmetrics_ultra_fast:
    root_path: ${env:HOST_ROOT_PATH:-/hostfs}
    collection_interval: ${env:ULTRA_FAST_INTERVAL:-5s}
    scrapers:
      processes: {}
      process:
        metrics:
          process.cpu.utilization: {enabled: true}
          process.memory.usage:    {enabled: true}
        include: {match_type: regexp, names: ["${env:PROCESS_INCLUDE:-.*}"]}
        exclude: {match_type: regexp, names: ["${env:PROCESS_EXCLUDE:-$^}"]}

  hostmetrics_ultra_medium:
    root_path: ${env:HOST_ROOT_PATH:-/hostfs}
    collection_interval: ${env:ULTRA_MEDIUM_INTERVAL:-30s}
    scrapers:
      process:
        metrics:
          process.disk.io:         {enabled: true}
          process.disk.operations: {enabled: true}
          process.threads:         {enabled: true}
          process.open_fds:        {enabled: true}
        include: {match_type: regexp, names: ["${env:PROCESS_INCLUDE:-.*}"]}
        exclude: {match_type: regexp, names: ["${env:PROCESS_EXCLUDE:-$^}"]}

  hostmetrics_ultra_slow:
    root_path: ${env:HOST_ROOT_PATH:-/hostfs}
    collection_interval: ${env:ULTRA_SLOW_INTERVAL:-60s}
    scrapers:
      process:
        metrics: {}   # heartbeat only
        include: {match_type: regexp, names: ["${env:PROCESS_INCLUDE:-.*}"]}
        exclude: {match_type: regexp, names: ["${env:PROCESS_EXCLUDE:-$^}"]}

  # ─── Balanced / Optimised / Lean / Micro – single scrape cadence ──────────
  hostmetrics_balanced:  &single
    root_path: ${env:HOST_ROOT_PATH:-/hostfs}
    collection_interval: ${env:BALANCED_INTERVAL:-30s}
    scrapers:
      processes: {}
      process:
        metrics:
          process.cpu.utilization: {enabled: true}
          process.memory.usage:    {enabled: true}
          process.disk.io:         {enabled: true}
        include: {match_type: regexp, names: ["${env:PROCESS_INCLUDE:-.*}"]}
        exclude: {match_type: regexp, names: ["${env:PROCESS_EXCLUDE:-$^}"]}

  hostmetrics_optimized:
    <<: *single
    collection_interval: ${env:OPTIMIZED_INTERVAL:-60s}
    scrapers:
      process:
        metrics:
          process.cpu.utilization: {enabled: true}
          process.memory.usage:    {enabled: true}
          process.disk.io:         {enabled: true}

  hostmetrics_lean:
    <<: *single
    collection_interval: ${env:LEAN_INTERVAL:-120s}
    scrapers:
      processes: {} # Retained for context as per v2.3
      process:
        metrics:
          process.cpu.utilization: {enabled: true}
          process.memory.usage:    {enabled: true}

  hostmetrics_micro:
    <<: *single
    collection_interval: ${env:MICRO_INTERVAL:-300s}
    scrapers:
      process:
        metrics:
          process.cpu.utilization: {enabled: true}
          process.memory.usage:    {enabled: true}

###############################################################################
# 2 ▸ Processors                                                              #
###############################################################################
processors:

  # ─── 2.1 Resource & batch spine ────────────────────────────────────────────
  memory_limiter:
    check_interval: 1s
    limit_mib:  ${env:NEW_RELIC_MEMORY_LIMIT_MIB:-250}
    spike_limit_mib: ${env:NEW_RELIC_MEMORY_SPIKE_LIMIT_MIB:-150}

  metricstransform/drop_idle_state:
    transforms:
      - include: ^process\.cpu\.utilization$
        action: update
        operations: [{action: delete_label_value, label: state, label_value: idle}]

  metricstransform/rename_util:
    transforms:
      - include: ^process\.cpu\.utilization$
        action: update
        operations: [{action: rename_metric, new_name: process.cpu.pct}]
      - include: ^process\.memory\.usage$
        action: update
        operations: [{action: rename_metric, new_name: process.mem.bytes}]

  transform/ultra_truncate_cli:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["process.command_line"],
                Substring(attributes["process.command_line"], 0, 120))
            where attributes["process.command_line"] != nil

  # ─── 2.2 SAFE aggregation (mem + IO only) ──────────────────────────────────
  metricstransform/aggregate_exe:
    transforms:
      - include: ^process\.(mem\.bytes|disk\.io)$ # Correctly excludes cpu.pct from sum
        match_type: regexp
        action: update
        operations:
          - action: aggregate_labels
            label_set: [process.executable.name]
            aggregation_type: sum

  attributes/drop_pid_cli_owner: # Applied after aggregation in relevant pipelines
    actions:
      - {key: process.pid,          action: delete}
      - {key: process.parent_pid,   action: delete}
      - {key: process.command_line, action: delete}
      - {key: process.owner,        action: delete}

  filter/balanced_idle_gate:
    metrics:
      datapoint:
        - 'metric.name == "process.cpu.pct"  and value_double < 0.01'  # Using fixed value instead of env var for stability
        - 'metric.name == "process.mem.bytes" and value_int < 104857600'  # Using fixed value instead of env var for stability

  filter/idle_gate_strict:
    metrics:
      datapoint:
        - 'metric.name == "process.cpu.pct"  and value_double < 0.05'  # Using fixed value instead of env var for stability
        - 'metric.name == "process.mem.bytes" and value_int < 52428800'  # Using fixed value instead of env var for stability

  cumulativetodelta: {}

  resourcedetection:      {detectors: [system]}
  resourcedetection/cloud:{detectors: [gcp, ec2, azure], timeout: 2s}
  resourcedetection/env:  {detectors: [env], timeout: 2s, override: true}

  batch: # Made configurable via environment variables
    send_batch_size: ${env:BATCH_SEND_SIZE:-8192}
    timeout: ${env:BATCH_TIMEOUT:-10s}

  # ─── 2.3 Profile attributes ───────────────────────────────────────────────
  attributes/ultra_attrs:     {actions: [*common_attr_actions, {key: collector.profile, value: ultra,     action: upsert}]}
  attributes/balanced_attrs:  {actions: [*common_attr_actions, {key: collector.profile, value: balanced,  action: upsert}]}
  attributes/optimized_attrs: {actions: [*common_attr_actions, {key: collector.profile, value: optimized, action: upsert}]}
  attributes/lean_attrs:      {actions: [*common_attr_actions, {key: collector.profile, value: lean,      action: upsert}]}
  attributes/micro_attrs:     {actions: [*common_attr_actions, {key: collector.profile, value: micro,     action: upsert}]}

  attributes/balanced_drop_cli: {actions: [{key: process.command_line, action: delete}]}
  
  # Hello World processor that adds a custom attribute
  attributes/hello_world:
    actions:
      - key: hello.world.processor
        value: "ran_successfully"
        action: upsert

###############################################################################
# 3 ▸ Exporter                                                                #
###############################################################################
exporters:
  otlphttp:
    endpoint: ${env:OTEL_EXPORTER_OTLP_ENDPOINT:-https://otlp.nr-data.net}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: zstd
    sending_queue:
      enabled: true
      num_consumers: ${env:OTLP_SENDING_QUEUE_CONSUMERS:-4}
      queue_size:    ${env:OTLP_SENDING_QUEUE_SIZE:-10000}
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 5m

  # Debug exporter for local troubleshooting
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

###############################################################################
# 4 ▸ Metrics-only service pipelines                                          #
###############################################################################
service:
  telemetry:
    logs:
      level: ${env:OTEL_LOG_LEVEL:-debug}
      development: true
      encoding: console
  
  extensions: [health_check]
  
  pipelines:
    metrics/ultra:
      if: "${env:NR_USE_ULTRA:-false}"
      receivers:  [hostmetrics_ultra_fast, hostmetrics_ultra_medium, hostmetrics_ultra_slow]
      processors:
        [memory_limiter,
         transform/ultra_truncate_cli,
         metricstransform/drop_idle_state,
         metricstransform/rename_util,
         cumulativetodelta,
         attributes/ultra_attrs,
         resourcedetection, resourcedetection/cloud, resourcedetection/env,
         batch]
      exporters:  [otlphttp, debug]

    metrics/balanced:
      if: "${env:NR_USE_BALANCED:-true}"
      receivers:  [hostmetrics_balanced]
      processors:
        [memory_limiter,
         metricstransform/drop_idle_state,
         metricstransform/rename_util,
         cumulativetodelta,
         attributes/balanced_attrs,
         attributes/balanced_drop_cli,
         filter/balanced_idle_gate,
         attributes/hello_world,
         resourcedetection, resourcedetection/cloud, resourcedetection/env,
         batch]
      exporters:  [otlphttp, debug]

    metrics/optimized:
      if: "${env:NR_USE_OPTIMIZED:-false}"
      receivers:  [hostmetrics_optimized]
      processors:
        [memory_limiter,
         metricstransform/drop_idle_state,
         metricstransform/rename_util,
         attributes/drop_pid_cli_owner, # Drop PIDs before aggregation by exe_name
         metricstransform/aggregate_exe,
         filter/idle_gate_strict,
         cumulativetodelta,
         attributes/optimized_attrs,
         resourcedetection, resourcedetection/cloud, resourcedetection/env,
         batch]
      exporters:  [otlphttp, debug]

    metrics/lean:
      if: "${env:NR_USE_LEAN:-false}"
      receivers:  [hostmetrics_lean]
      processors:
        [memory_limiter,
         metricstransform/drop_idle_state,
         metricstransform/rename_util,
         attributes/drop_pid_cli_owner, # Drop PIDs before aggregation by exe_name
         metricstransform/aggregate_exe,
         filter/idle_gate_strict,
         cumulativetodelta,
         attributes/lean_attrs,
         resourcedetection, resourcedetection/cloud, resourcedetection/env,
         batch]
      exporters:  [otlphttp, debug]

    metrics/micro:
      if: "${env:NR_USE_MICRO:-false}"
      receivers:  [hostmetrics_micro]
      processors:
        [memory_limiter,
         metricstransform/drop_idle_state,
         metricstransform/rename_util,
         cumulativetodelta,
         attributes/micro_attrs,
         resourcedetection, resourcedetection/cloud, resourcedetection/env,
         batch]
      exporters:  [otlphttp, debug]