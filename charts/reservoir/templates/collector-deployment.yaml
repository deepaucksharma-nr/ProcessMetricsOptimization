apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: opentelemetry-collector
spec:
  replicas: 1  # Reservoir state is in Badger, so one instance per tenant
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-collector
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: otel-collector
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: opentelemetry-collector
    spec:
      serviceAccountName: {{ .Release.Name }}-collector
      securityContext:
        fsGroup: 10001  # Matches the Badger UID requirement
      containers:
        - name: collector
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - "--config=/etc/otelcol-reservoir/config.yaml"
          ports:
            - name: otlp-grpc
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
            - name: metrics
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/otelcol-reservoir
            - name: badger-data
              mountPath: /var/otelpersist
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 400Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 13133
          readinessProbe:
            httpGet:
              path: /healthz
              port: 13133
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-collector-config
        - name: badger-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-badger-data
